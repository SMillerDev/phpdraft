name: PHPDrafter tests

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    name: PHP ${{ matrix.php-versions }}
    continue-on-error: ${{ matrix.experimental }}
    env:
      extensions: curl,json,mbstring,uopz
      key: cache-v1 # can be any string, change to clear the extension cache.
    strategy:
      matrix:
        php-versions: ['8.2', '8.3']
        experimental: [ false ]
        include:
          - php-versions: '8.4'
            experimental: true
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@4595bea7d6630821b0a3a4894f816402faaf324c # 1.13.0
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # 2.35.5
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          coverage: pcov
          tools: pecl,phpstan,phpunit,cs2pr,phpcs

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ignore-platform-reqs

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run test suite
        run: ./vendor/phpunit/phpunit/phpunit --configuration tests/phpunit.xml --coverage-clover=coverage.xml --exclude-group twig

      - name: PHPStan
        run: ./vendor/phpstan/phpstan/phpstan analyse --level=6 src/

      - name: PHPCS
        run: phpcs --standard=tests/phpcs.xml --ignore=\*Minifier.php src/ | cs2pr

      - name: Upload coverage result
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: coverage-${{ matrix.php-versions }}
          path: coverage.xml

  # openapi:
  #   name: File generation
  #   needs: test
  #   runs-on: ubuntu-latest
  #   env:
  #     PHPDRAFT_THIRD_PARTY: 1
  #     extensions: curl,json,mbstring,uopz
  #     key: cache-v1 # can be any string, change to clear the extension cache.
  #   strategy:
  #     matrix:
  #       php-versions: [ '8.3' ]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

  #     - name: Setup cache environment
  #       id: extcache
  #       uses: shivammathur/cache-extensions@4595bea7d6630821b0a3a4894f816402faaf324c # 1.13.0
  #       with:
  #         php-version: ${{ matrix.php-versions }}
  #         extensions: ${{ env.extensions }}
  #         key: ${{ env.key }}

  #     - name: Cache extensions
  #       uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
  #       with:
  #         path: ${{ steps.extcache.outputs.dir }}
  #         key: ${{ steps.extcache.outputs.key }}
  #         restore-keys: ${{ steps.extcache.outputs.key }}

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # 2.35.5
  #       with:
  #         php-version: ${{ matrix.php-versions }}
  #         extensions: ${{ env.extensions }}
  #         coverage: pcov
  #         tools: pecl,phpunit

  #     - name: Get Composer Cache Directory
  #       id: composer-cache
  #       run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

  #     - name: Cache dependencies
  #       uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
  #       with:
  #         path: ${{ steps.composer-cache.outputs.dir }}
  #         key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  #         restore-keys: ${{ runner.os }}-composer-

  #     - name: Validate composer.json and composer.lock
  #       run: composer validate

  #     - name: Install dependencies
  #       run: composer install --prefer-dist --no-progress --ignore-platform-reqs

  #     - name: Generate OpenAPI definition and HTML
  #       run: php ./phpdraft --online --file tests/statics/full_test.apib --openapi openapi.json > out.html 2> error.txt || true

  #     - name: Install check-jsonschema
  #       run: pipx install check-jsonschema

  #     - name: Validate OpenAPI spec
  #       run: |
  #         if [ -s "error.txt" ]; then
  #           echo "The file 'error.txt' is not empty."
  #           cat error.txt
  #           exit 1
  #         fi

  #         if [ ! -s "index.html" ]; then
  #           echo "The file 'index.html' is empty."
  #           exit 1
  #         fi
          
  #         if [ ! -s "openapi.json" ]; then
  #           echo "The file 'openapi.json' is empty."
  #           exit 1
  #         fi
          
  #         check-jsonschema --schemafile https://spec.openapis.org/oas/3.1/schema/latest openapi.json

  analytics:
    name: Analytics
    needs: test
    if: success()
    runs-on: ubuntu-latest
    env:
      extensions: curl,json,mbstring,uopz
      key: cache-v1 # can be any string, change to clear the extension cache.
    strategy:
      matrix:
        php-versions: ['8.3']
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@4595bea7d6630821b0a3a4894f816402faaf324c # 1.13.0
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # 2.35.5
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          coverage: pcov
          tools: pecl,phpunit

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ignore-platform-reqs

      - name: Run test suite
        run: ./vendor/phpunit/phpunit/phpunit --configuration tests/phpunit.xml --exclude-group twig --coverage-clover=./var/coverage/clover.xml

      - name: Code coverage Scan
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Change paths in clover.xml
        run: |
          sed -i 's+/home/runner/work/bundle-stripe/bundle-stripe+/github/workspace+g' ./var/coverage/clover.xml
          mv ./var/coverage/clover.xml coverage.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602 # v6.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
